# -*- coding: utf-8 -*-
# @Time : 2020/4/6 21:52
# @Author : xibei
# @filename : python_20200406_正则表达式.py
# @description ：正则表达式的学习以及在python中的使用

'''正则表达式'''

# 1. 一种字符串匹配的模式（pattern），可以用来检查一串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。

# 2.常用字符：
#  $	匹配输入字符串的结尾位置。
# ( )	标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。
#  *	匹配前面的子表达式零次或多次。
#  +	匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+。
#  .	匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 \. 。
#  [	标记一个中括号表达式的开始。要匹配 [，请使用 \[。
#  ?	匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。
#  \	将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。
#  ^	匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。
#  {	标记限定符表达式的开始。
#  |	指明两项之间的一个选择。

# 3.运算优先级
#   \	转义符
#   (), (?:), (?=), []	圆括号和方括号
#   *, +, ?, {n}, {n,}, {n,m}	限定符
#   ^, $, \任何元字符、任何字符	定位点和序列（即：位置和顺序）
#   |	替换，"或"操作， 字符具有高于替换运算符的优先级，使得"m|food"匹配"m"或"food"。
#       若要匹配"mood"或"food"，请使用括号创建子表达式，从而产生"(m|f)ood"。

